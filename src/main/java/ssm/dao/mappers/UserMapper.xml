<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="ssm.dao.mappers.UserMapper">
	<select id="findOneByUsername" resultType="User">
		select * from shopping_user where username = #{username}
	</select>
	
	<insert id="create">
		insert into shopping_user(id, username, email, phone_number, password) 
		values(shopping_user_seq.nextval, #{username}, #{email}, #{phone_number}, #{password})
	</insert>
	
	<update id="updatePassword" parameterType="User">
		update shopping_user set password = #{password} where id = #{id}
	</update>
	
	<update id="updateVip">
		update shopping_user set real_name = #{real_name}, city = #{city}, 
		sex = #{sex}, email = #{email},	id_card = #{id_card}, introduce = #{introduce} 
		where id = #{id}
	</update>
	
	<select id="findAllAddress" resultType="ReceivingAddress">
		select * from receiving_address 
		where user_id = #{user_id}
	</select>
	
	<select id="findOneIdAddress" resultType="ReceivingAddress">
		select * from receiving_address 
		where id = #{id}
	</select>
	
	<insert id="addAddress" parameterType="ReceivingAddress">
		insert into receiving_address(id, user_id, consignee, where_city, 
		street_address, postal_code, phone_number) 
		values(receiving_address_seq.nextval, #{userId}, #{consignee}, #{whereCity}, #{streetAddress}, 
		#{postalCode}, #{phoneNumber})
	</insert>
	
	<update id="updateAddress" parameterType="ReceivingAddress">
		update receiving_address set consignee = #{consignee}, where_city = #{whereCity}, 
		street_address = #{streetAddress}, postal_code = #{postalCode}, phone_number = #{phoneNumber} 
		where id = #{id}
	</update>
	
	<delete id="deleteAddress" parameterType="ReceivingAddress">
		delete receiving_address where id = #{id}
	</delete>
	
	<select id="findAllOrder" resultMap="orderMap">
		select r.id address_id, r.consignee address_name, v.id order_id, 
		v.price order_price, v.payment_mode order_pay, v.creation_time order_time, 
		v.state order_state 
		from vip_orderlist v join receiving_address r on v.address_id = r.id 
		where v.user_id = #{userId}
	</select>
	<resultMap type="Order" id="orderMap">
		<id property="id" column="order_id"/>
		<result property="price" column="order_price"/>
		<result property="paymentMode" column="order_pay"/>
		<result property="creationTime" column="order_time"/>
		<result property="state" column="order_state"/>
				
		<association property="receivingAddress" javaType="ReceivingAddress">
			<id property="id" column="address_id"/>
			<result property="consignee" column="address_name"/>
		</association>
	</resultMap>
</mapper>